# Development docker-compose.yaml file
services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: questify-frontend
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/projects/questify/frontend
    restart: unless-stopped
    environment:
      - DOCKER_ENVIRONMENT=true
      - VITE_API_URL=http://localhost:8000/api/v1 # Here localhost has to be used instead of backend to avoid url not resolved issue during api call as browser has no idea of backend named docker service
    depends_on:
      - backend
    # The goal is for the host to connect to the Vite dev server running inside the container.
    # Port mapping allows the host and container to communicate with each other, but the site is still inaccessible on localhost:5173 on the host machine.
    # Because by default Vite binds to localhost (127.0.0.1) , which means Vite dev server only allows requests originating from localhost i.e within the container and not the host.
    # --host flag makes Vite dev server bind to 0.0.0.0, exposing it to the network and allowing requests from external sources including the host machine.
    # * Unlike Vite , Express or Nginx do not face such issues as these servers binds to 0.0.0.0 by default.
    # First '--' implies that the following arguments are script arguments, if it is not provided the next values are considered npm arguments instead of script's.
    command: ["npm", "run", "dev", "--", "--host"]
    networks:
      - questify-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: questify-backend
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env
    volumes:
      - ./backend/src:/projects/questify/backend/src
    restart: unless-stopped
    environment:
      - DOCKER_ENVIRONMENT=true
    depends_on:
      - mongodb
      - redis
    networks:
      - questify-network

  mongodb:
    image: mongo
    container_name: questify-mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    restart: unless-stopped
    networks:
      - questify-network

  redis:
    image: redis/redis-stack-server
    container_name: questify-redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    volumes:
      - redis-data:/data
    networks:
      - questify-network

volumes:
  mongodb_data:
  redis-data:

networks:
  questify-network:
    driver: bridge
